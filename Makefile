#############################################################################
# Makefile for building: gtkIDS
# Generated by qmake (2.01a) (Qt 4.8.1) on: ?? 4? 12 19:26:22 2014
# Project:  gtkIDS.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile gtkIDS.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -pthread -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -pthread -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -Iinclude -I/usr/include/mysql -I/usr/include/gtk-2.0 -I/usr/lib/i386-linux-gnu/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/pango-1.0 -I/usr/include/gio-unix-2.0 -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/i386-linux-gnu -L/usr/lib/mysql -lmysqlclient -lz -lpcap -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lglib-2.0 -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = src/Decoder/dataCache.cpp \
		src/DetectionEngine/detect_acvl.cpp \
		src/init/init.cpp \
		src/Preprocessor/process.cpp \
		src/Sniffer/sqlToCache.cpp \
		src/Sniffer/pcapToCache.cpp \
		src/Manager/manager.cpp \
		src/RuleBase/rulebase.cpp \
		src/AttackStore/attack_store.cpp \
		src/AttackStore/record.cpp 
OBJECTS       = dataCache.o \
		detect_acvl.o \
		init.o \
		process.o \
		sqlToCache.o \
		pcapToCache.o \
		manager.o \
		rulebase.o \
		attack_store.o \
		record.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/link_pkgconfig.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		gtkIDS.pro
QMAKE_TARGET  = gtkIDS
DESTDIR       = 
TARGET        = gtkIDS

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: gtkIDS.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/link_pkgconfig.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/i386-linux-gnu/libQtGui.prl \
		/usr/lib/i386-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile gtkIDS.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/link_pkgconfig.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/i386-linux-gnu/libQtGui.prl:
/usr/lib/i386-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile gtkIDS.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/gtkIDS1.0.0 || $(MKDIR) .tmp/gtkIDS1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/gtkIDS1.0.0/ && $(COPY_FILE) --parents include/decoder_dataCache.h include/detect_acvl.h include/preprocessor_process.h include/sniffer_sqlToCache.h include/init.h include/manager.h include/rulebase.h include/attack_store.h include/record.h .tmp/gtkIDS1.0.0/ && $(COPY_FILE) --parents src/Decoder/dataCache.cpp src/DetectionEngine/detect_acvl.cpp src/init/init.cpp src/Preprocessor/process.cpp src/Sniffer/sqlToCache.cpp src/Sniffer/pcapToCache.cpp src/Manager/manager.cpp src/RuleBase/rulebase.cpp src/AttackStore/attack_store.cpp src/AttackStore/record.cpp .tmp/gtkIDS1.0.0/ && (cd `dirname .tmp/gtkIDS1.0.0` && $(TAR) gtkIDS1.0.0.tar gtkIDS1.0.0 && $(COMPRESS) gtkIDS1.0.0.tar) && $(MOVE) `dirname .tmp/gtkIDS1.0.0`/gtkIDS1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/gtkIDS1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

dataCache.o: src/Decoder/dataCache.cpp include/decoder_dataCache.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dataCache.o src/Decoder/dataCache.cpp

detect_acvl.o: src/DetectionEngine/detect_acvl.cpp include/detect_acvl.h \
		include/preprocessor_process.h \
		include/decoder_dataCache.h \
		include/init.h \
		include/attack_store.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o detect_acvl.o src/DetectionEngine/detect_acvl.cpp

init.o: src/init/init.cpp include/sniffer_sqlToCache.h \
		include/decoder_dataCache.h \
		include/preprocessor_process.h \
		include/detect_acvl.h \
		include/init.h \
		include/manager.h \
		include/rulebase.h \
		include/attack_store.h \
		include/record.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o init.o src/init/init.cpp

process.o: src/Preprocessor/process.cpp include/preprocessor_process.h \
		include/decoder_dataCache.h \
		include/detect_acvl.h \
		include/init.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o process.o src/Preprocessor/process.cpp

sqlToCache.o: src/Sniffer/sqlToCache.cpp include/decoder_dataCache.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sqlToCache.o src/Sniffer/sqlToCache.cpp

pcapToCache.o: src/Sniffer/pcapToCache.cpp include/decoder_dataCache.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o pcapToCache.o src/Sniffer/pcapToCache.cpp

manager.o: src/Manager/manager.cpp include/manager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o manager.o src/Manager/manager.cpp

rulebase.o: src/RuleBase/rulebase.cpp include/rulebase.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o rulebase.o src/RuleBase/rulebase.cpp

attack_store.o: src/AttackStore/attack_store.cpp include/attack_store.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o attack_store.o src/AttackStore/attack_store.cpp

record.o: src/AttackStore/record.cpp include/record.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o record.o src/AttackStore/record.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

